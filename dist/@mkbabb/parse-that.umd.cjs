(function(p,m){typeof exports=="object"&&typeof module<"u"?m(exports,require("chalk")):typeof define=="function"&&define.amd?define(["exports","chalk"],m):(p=typeof globalThis<"u"?globalThis:p||self,m(p.ParseThat={},p.chalk))})(this,function(p,m){"use strict";class S{constructor(t,e=void 0,n=0,r=0,s=!1){this.src=t,this.value=e,this.offset=n,this.lineNumber=r,this.isError=s}ok(t){return new S(this.src,t,this.offset,this.lineNumber)}err(t){const e=this.ok(t);return e.isError=!0,e}slice(t){return this.src.slice(this.offset,this.offset+t)}next(t=1){const e=this.slice(t);if(e===void 0)return this;t+=this.offset;const n=e.split(`
`).length-1+this.lineNumber;return new S(this.src,e,t,n)}getColumnNumber(){const t=this.offset,e=this.src.lastIndexOf(`
`,t),n=e===-1?t:t-(e+1);return Math.max(0,n)}addCursor(t="^"){const r=this.src.split(`
`),s=Math.min(r.length-1,this.lineNumber),i=Math.max(s-5,0),a=Math.min(s+5+1,r.length),u=r.slice(i,a).map(b=>b.length<=80?b:b.slice(0,80-3)+"..."),f=" ".repeat(this.getColumnNumber())+t;u.splice(s-i+1,0,f);const N=(a+"").length;return u.map((b,J)=>`${(i+J+1+"").padStart(N)} | ${b}`).join(`
`)}}class l{constructor(t,e){this.parser=t,this.context=e}parse(t){return this.parser(new S(t)).value}then(t){const e=n=>{const r=this.parser(n);if(!r.isError){const s=t.parser(r);if(!s.isError)return s.ok([r.value,s.value])}return n.err(void 0)};return new l(e,{name:"then",args:[t]})}or(t){const e=n=>{const r=this.parser(n);return r.isError?t.parser(n):r};return new l(e,{name:"or",args:[t]})}chain(t,e=!1){const n=r=>{const s=this.parser(r);return s.isError?s:s.value||e?t(s.value).parser(s):r};return new l(n,{name:"chain",args:[t]})}map(t,e=!1){const n=r=>{const s=this.parser(r);return!s.isError||e?s.ok(t(s.value)):s};return new l(n,{name:"map",args:[this]})}skip(t){const e=this.then(t).map(([n])=>n);return e.context.name="skip",e}next(t){const e=this.then(t).map(([,n])=>n);return e.context.name="next",e}opt(){const t=e=>{const n=this.parser(e);return n.isError?e.ok(void 0):n};return new l(t,{name:"opt",args:[this]})}not(t){const e=r=>this.parser(r).isError?r.ok(r.value):r.err(void 0),n=r=>{const s=this.parser(r);return s.isError||t.parser(r).isError?s:r.err(void 0)};return new l(t?n:e,{name:"not",args:[t]})}wrap(t,e){const n=t.next(this).skip(e);return n.context.name="wrap",n.context.args=[t,e],n}trim(t=k){const e=this.wrap(t,t.opt());return e.context.name="trim",e}many(t=0,e=1/0){const n=r=>{const s=[];let i=r;for(let a=0;a<e;a+=1){const u=this.parser(i);if(u.isError)break;s.push(u.value),i=u}return s.length>=t?i.ok(s):r.err([])};return new l(n,{name:"many",args:[t,e]})}sepBy(t,e=0,n=1/0){const r=this.then(t.then(this).map(([s,i])=>i).many(e,n)).map(([s,i])=>[s,...i]);return r.context.name="sepBy",r.context.args=[t,e,n],r}debug(t="",e=console.log){t=m.italic(t);const n=r=>{const s=this.parser(r),i=s.isError?m.bgRed:m.bgGreen,a=s.isError?m.red:m.green;e(i.bold(s.isError?" Err ":" Ok "),a(s.isError?"ｘ":"✓",`	${t}	`),`${this.toString()}`);const u=r.addCursor("^");return e(m.yellow(u)+`
`),s};return new l(n,{name:"debug",args:[t]})}static lazy(t){const e=n=>t().parser(n);return new l(e,{name:"lazy",args:[t]})}toString(t=0){var r;const e=((r=this.context)==null?void 0:r.name)??"unknown",n=(()=>{switch(e){case"string":return`"${this.context.args[0]}"`;case"regex":return`${this.context.args[0]}`;case"wrap":case"trim":return`wrap(${this.context.args[0]}, ${this.context.args[1]})`;case"not":return`!${this.context.args[0]}`;case"opt":return`${this.context.args[0]}?`;case"next":return` (next ${this.context.args[0]}) `;case"skip":return` (skip ${this.context.args[0]}) `;case"then":return`( then ${this.context.args[0]}) `;case"map":return`${this.context.args[0].toString()}`;case"any":case"all":const i=e==="any"?" | ":" , ";return`(${this.context.args.map(a=>a.toString(t+1)).join(i)})`;case"many":return`${this.context.args[0]} ... ${this.context.args[1]}`;case"sepBy":return`sepBy ${this.context.args[0]}`;case"lazy":return`() => ${this.context.args[0]}`}})();return n!==void 0?n:m.bold(e)}}function $(){const o=t=>t.offset>=t.src.length?t.ok(void 0):t.err();return new l(o,{name:"eof"})}function y(o,t,e){let n=e.value;e.value=function(){const r=s=>n.apply(this,arguments).parser(s);return new l(r,{name:"lazy",args:[n]})}}function h(...o){const t=e=>{for(const n of o){const r=n.parser(e);if(!r.isError)return r}return e.err(void 0)};return new l(o.length===1?o[0].parser:t,{name:"any",args:o})}function d(...o){const t=e=>{const n=[];for(const r of o){const s=r.parser(e);if(s.isError)return s;s.value!==void 0&&n.push(s.value),e=s}return e.ok(n)};return new l(o.length===1?o[0].parser:t,{name:"all",args:o})}function c(o){const t=e=>{if(e.offset>=e.src.length)return e.err(void 0);const n=e.next(o.length);return n.value===o?n:e.err(void 0)};return new l(t,{name:"string",args:[o]})}function v(o){const t=new RegExp(o,o.flags+"y"),e=n=>{var s;if(n.offset>=n.src.length)return n.err(void 0);t.lastIndex=n.offset;const r=(s=n.src.match(t))==null?void 0:s[0];return r?n.next(r.length):r===""?n.ok(void 0):n.err(void 0)};return new l(e,{name:"regex",args:[o]})}const k=v(/\s*/);k.context.name="whitespace";var L=Object.defineProperty,M=Object.getOwnPropertyDescriptor,w=(o,t,e,n)=>{for(var r=n>1?void 0:n?M(t,e):t,s=o.length-1,i;s>=0;s--)(i=o[s])&&(r=(n?i(t,e,r):i(r))||r);return n&&r&&L(t,e,r),r};const I=c(",").trim(),z=c("=").trim(),A=c(";").trim(),B=c(".").trim(),G=c("?").trim(),T=c("|").trim(),O=c("+").trim(),_=c("-").trim(),C=c("*").trim();c("/").trim();const R=c(">>").trim(),j=c("<<").trim();v(/\d+/).trim().map(Number);const P=h(A,B);class g{identifier(){return v(/[_a-zA-Z][_a-zA-Z0-9]*/).trim()}literal(){return h(v(/[^"\s]+/).wrap(c('"'),c('"')),v(/[^'\s]+/).wrap(c("'"),c("'"))).map(t=>({type:"literal",value:t}))}nonterminal(){return this.identifier().map(t=>({type:"nonterminal",value:t}))}group(){return this.expression().trim().wrap(c("("),c(")")).map(t=>({type:"group",value:t}))}regex(){return v(/[^\/]*/).trim().wrap(c("/"),c("/")).map(t=>({type:"regex",value:new RegExp(t)}))}optional(){return this.term().trim().skip(G).map(t=>({type:"optional",value:t}))}optionalGroup(){return this.expression().trim().wrap(c("["),c("]")).map(t=>({type:"optional",value:t}))}subtraction(){return d(this.term().skip(_),this.term()).map(([t,e])=>({type:"subtraction",value:[t,e]}))}manyGroup(){return this.expression().trim().wrap(c("{"),c("}")).map(t=>({type:"many",value:t}))}many(){return this.term().trim().skip(C).map(t=>({type:"many",value:t}))}many1(){return this.term().trim().skip(O).map(t=>({type:"many1",value:t}))}next(){return d(this.factor().skip(R),h(this.skip(),this.factor())).map(([t,e])=>({type:"next",value:[t,e]}))}skip(){return d(h(this.next(),this.factor()).skip(j),this.factor()).map(([t,e])=>({type:"skip",value:[t,e]}))}concatenation(){return h(this.skip(),this.next(),this.factor()).sepBy(I,1).map(t=>({type:"concatenation",value:t}))}alternation(){return h(this.concatenation(),this.skip(),this.next(),this.factor()).sepBy(T,1).map(t=>({type:"alternation",value:t}))}term(){return h(this.literal(),this.nonterminal(),this.regex(),this.group(),this.optionalGroup(),this.manyGroup())}factor(){return h(this.optional(),this.many(),this.many1(),this.subtraction(),this.term())}expression(){return h(this.alternation(),this.concatenation(),this.skip(),this.next(),this.factor())}productionRule(){return d(this.identifier().skip(z),this.expression().skip(P)).map(([t,e])=>({name:t,expression:e}))}grammar(){return this.productionRule().many()}}w([y],g.prototype,"group",1),w([y],g.prototype,"regex",1),w([y],g.prototype,"optionalGroup",1),w([y],g.prototype,"manyGroup",1),w([y],g.prototype,"next",1),w([y],g.prototype,"skip",1);function D(o){const t=new Set,e=[];function n(s,i){if(i.has(s))throw new Error("Dependency cycle detected");if(t.has(s))return;i.add(s);const a=o.get(s);if(a){if(a.type==="nonterminal")n(a.value,i);else if(a.type==="concatenation"||a.type==="alternation")for(const u of a.value)u.type==="nonterminal"&&n(u.value,i);t.add(s),i.delete(s),e.unshift({name:s,expression:a})}}for(const[s]of o)n(s,new Set);const r=new Map;for(const s of e)r.set(s.name,s.expression);return r}const E=(o,t)=>{if(!(!(o!=null&&o.type)||!(t!=null&&t.type)||o.type!==t.type))switch(o.type){case"literal":case"nonterminal":return o.value!==t.value?void 0:[o,{type:"epsilon"},{type:"epsilon"}];case"group":case"optional":case"many":case"many1":{const e=E(o.value,t.value);return e?[{type:o.type,value:e[0]},{type:o.type,value:e[1]},{type:o.type,value:e[2]}]:void 0}case"concatenation":{const e=o.value.map((u,f)=>E(o.value[f],t.value[f]));if(e.some(u=>u===void 0))return;const n=e.map(u=>u[0]),r=e.map(u=>u[1]),s=e.map(u=>u[2]),i=n.lastIndexOf(null);return i===n.length-1?void 0:[{type:"concatenation",value:n.slice(i+1)},{type:"concatenation",value:r},{type:"concatenation",value:s}]}case"alternation":for(const e of o.value){const n=E(e,t);if(n)return n}for(const e of t.value){const n=E(o,e);if(n)return n}return}},x=(o,t)=>{if(o.type!==t.type)return!1;switch(o.type){case"literal":case"nonterminal":return o.value===t.value;case"group":case"optional":case"many":case"many1":return x(o.value,t.value);case"subtraction":case"skip":case"next":return x(o.value[0],t.value[0])&&x(o.value[1],t.value[1]);case"concatenation":return o.value.every((e,n)=>x(e,t.value[n]));case"alternation":return o.value.some((e,n)=>x(e,t.value[n]));case"epsilon":return!0}};function F(o,t,e){const n=[],r=[],s={type:"nonterminal",value:e};for(let i=0;i<t.value.length;i++){const a=t.value[i];a.type==="concatenation"&&a.value[0].value===o?r.push({type:"concatenation",value:[...a.value.slice(1),s]}):n.push({type:"concatenation",value:[a,s]})}return r.length===0?[void 0,void 0]:(r.push({type:"epsilon"}),[{type:"alternation",value:n},{type:"alternation",value:r}])}function X(o,t){const e=new Map;let n=null;for(let r=0;r<t.value.length-1;r++){const s=t.value[r],i=t.value[r+1],a=E(s,i);if(a){const[u,f,N]=a;n!==null&&x(u,n)?e.get(n).push(N):(e.set(u,[f,N]),n=u),r===t.value.length-2&&t.value.shift(),t.value.shift(),r-=1}}for(const[r,s]of e){const a={type:"concatenation",value:[{type:"group",value:{type:"alternation",value:s}},{type:"group",value:r}]};t.value.push(a)}}function q(o){const t=D(o),e=new Map;let n=0;for(const[r,s]of t)if(s.type==="alternation"){const i=`${r}_${n++}`,[a,u]=F(r,s,i);a&&(e.set(i,u),e.set(r,a))}if(e.size===0)return o;for(const[r,s]of e)t.set(r,s);for(const[r,s]of t)s.type==="alternation"&&X(r,s);return t}function H(o){function t(n,r){var s,i;switch(r.type){case"literal":return c(r.value);case"nonterminal":const a=l.lazy(()=>e[r.value]);return a.context.name=m.blue(r.value),a;case"epsilon":return $().opt();case"group":return t(n,r.value);case"regex":return v(r.value);case"optional":return t(n,r.value).opt();case"many":return t(n,r.value).many();case"many1":return t(n,r.value).many(1);case"skip":return t(n,r.value[0]).skip(t(n,r.value[1]));case"next":return t(n,r.value[0]).next(t(n,r.value[1]));case"subtraction":return t(n,r.value[0]).not(t(n,r.value[1]));case"concatenation":const u=r.value.map(f=>t(n,f));return((i=(s=u.at(-1))==null?void 0:s.context)==null?void 0:i.name)==="eof"&&u.pop(),d(...u);case"alternation":return h(...r.value.map(f=>t(n,f)))}}const e={};for(const[n,r]of o.entries())e[n]=t(n,r);return e}function Z(o){let t=new g().grammar().parse(o).reduce((n,{name:r,expression:s})=>(n.set(r,s),n),new Map);return t=q(t),[H(t),t]}const W=(o,t)=>{Object.entries(o).forEach(([e,n])=>{o[e]=n.debug(e,t)})};p.Parser=l,p.ParserState=S,p.addNonterminalsDebugging=W,p.all=d,p.any=h,p.eof=$,p.generateParserFromEBNF=Z,p.lazy=y,p.regex=v,p.string=c,p.whitespace=k,Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});
