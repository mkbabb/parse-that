"use strict";var b=Object.defineProperty;var L=(s,e,t)=>e in s?b(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var y=(s,e,t)=>(L(s,typeof e!="symbol"?e+"":e,t),t);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});class w{constructor(e,t=void 0,r=0,n=!1){this.src=e,this.value=t,this.offset=r,this.isError=n}ok(e,t=0){return new w(this.src,e,this.offset+t)}err(e,t=0){const r=this.ok(e,t);return r.isError=!0,r}from(e,t=0){return new w(this.src,e,this.offset+t,this.isError)}getColumnNumber(){const e=this.offset,t=this.src.lastIndexOf(`
`,e),r=t===-1?e:e-(t+1);return Math.max(0,r)}getLineNumber(){const t=this.src.slice(0,this.offset).split(`
`).length-1;return Math.max(0,t)}}function o(s,e,...t){return{name:s,parser:e,args:t}}let M=0;const h=new Map,p=new Map;function x(s){return s.parser?s.parser:s.parser=s()}class u{constructor(e,t={}){y(this,"id",M++);this.parser=e,this.context=t}parse(e){return h.clear(),p.clear(),this.parser(new w(e)).value}getCijKey(e){return`${this.id}${e.offset}`}atLeftRecursionLimit(e){return(p.get(this.getCijKey(e))??0)>e.src.length-e.offset}memoize(){const e=t=>{const r=this.getCijKey(t),n=p.get(r)??0;let i=h.get(this.id);if(i&&i.offset>=t.offset)return i;if(this.atLeftRecursionLimit(t))return t.err(void 0);p.set(r,n+1);const c=this.parser(t);return i=h.get(this.id),i&&i.offset>c.offset?c.offset=i.offset:i||h.set(this.id,c),c};return new u(e,o("memoize",this))}mergeMemos(){const e=t=>{let r=h.get(this.id);if(r)return r;if(this.atLeftRecursionLimit(t))return t.err(void 0);const n=this.parser(t);return r=h.get(this.id),r||h.set(this.id,n),n};return new u(e,o("mergeMemo",this))}then(e){if(l(this,e))return g([this,e],"",r=>[r==null?void 0:r[0],r==null?void 0:r[1]]);const t=r=>{const n=this.parser(r);if(!n.isError){const i=e.parser(n);if(!i.isError)return i.ok([n.value,i.value])}return r.err(void 0)};return new u(t,o("then",this,this,e))}or(e){if(l(this,e))return g([this,e],"|");const t=r=>{const n=this.parser(r);return n.isError?e.parser(r):n};return new u(t,o("or",this,this,e))}chain(e,t=!1){const r=n=>{const i=this.parser(n);return i.isError?i:i.value||t?e(i.value).parser(i):n};return new u(r,o("chain",this,e))}map(e,t=!1){const r=n=>{const i=this.parser(n);return!i.isError||t?i.ok(e(i.value)):i};return new u(r,o("map",this))}mapState(e){const t=r=>{const n=this.parser(r);return e(n)};return new u(t,o("mapState",this))}skip(e){const t=r=>{const n=this.parser(r);if(!n.isError){const i=e.parser(n);if(!i.isError)return i.ok(n.value)}return r.err(void 0)};return new u(t,o("skip",this,e))}next(e){const t=this.then(e).map(([,r])=>r);return t.context=o("next",this,e),t}opt(){const e=t=>{const r=this.parser(t);return r.isError?t.ok(void 0):r};return new u(e,o("opt",this))}not(e){const t=n=>this.parser(n).isError?n.ok(n.value):n.err(void 0),r=n=>{const i=this.parser(n);return i.isError||e.parser(n).isError?i:n.err(void 0)};return new u(e?r:t,o("not",this,e))}wrap(e,t){if(l(e,this,t))return C(e,this,t);const r=e.next(this).skip(t);return r.context=o("wrap",this,e,t),r}trim(e=S){var t;if(((t=e.context)==null?void 0:t.name)==="whitespace"){if(l(this,e))return g([e,this,e],"",n=>n==null?void 0:n[2]);const r=n=>{const i=k(n),c=this.parser(i);return c.isError?n.err(void 0):k(c)};return new u(r,o("trimWhitespace",this))}return this.wrap(e,e)}many(e=0,t=1/0){const r=n=>{const i=[];let c=n;for(let f=0;f<t;f+=1){const a=this.parser(c);if(a.isError)break;i.push(a.value),c=a}return i.length>=e?c.ok(i):n.err([])};return new u(r,o("many",this,e,t))}sepBy(e,t=0,r=1/0){const n=i=>{const c=[];let f=i;for(let a=0;a<r;a+=1){const m=this.parser(f);if(m.isError)break;f=m,c.push(f.value);const d=e.parser(f);if(d.isError)break;f=d}return c.length>t?f.ok(c):i.err([])};return new u(n,o("sepBy",this,e))}eof(){const e=this.skip(z());return e.context=o("eof",this),e}toString(){var e;return(e=this.context)==null?void 0:e.name}static lazy(e){const t=r=>x(e).parser(r);return new u(t,o("lazy",void 0,e))}}function l(...s){return s.every(e=>{var t,r,n,i;return(((t=e.context)==null?void 0:t.name)==="string"||((r=e.context)==null?void 0:r.name)==="regex"||((n=e.context)==null?void 0:n.name)==="whitespace")&&((i=e.context)==null?void 0:i.args)})}function j(s){var e,t,r,n,i;if(((e=s.context)==null?void 0:e.name)==="string")return(t=s.context)==null?void 0:t.args[0].replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&");if(((r=s.context)==null?void 0:r.name)==="regex"||((n=s.context)==null?void 0:n.name)==="whitespace")return(i=s.context)==null?void 0:i.args[0].source}function g(s,e="",t){const r=s.map(c=>`(${j(c)})`).join(e),n=new RegExp(r),i=v(n,t);return e!=="|"&&(i.context=o("regexConcat",this,n)),i}function C(s,e,t){const r=g([s,e,t],"",n=>n==null?void 0:n[2]);return r.context.name="regexWrap",r}function z(){const s=e=>e.offset>=e.src.length?e.ok(void 0):e.err();return new u(s,o("eof"))}function I(s,e,t){const r=t.value.bind(s);t.value=function(){const n=i=>x(r).parser(i);return new u(n,o("lazy",void 0,r))}}function R(...s){if(l(...s))return g(s,"|");const e=t=>{for(const r of s){const n=r.parser(t);if(!n.isError)return n}return t.err(void 0)};return new u(s.length===1?s[0].parser:e,o("any",void 0,...s))}function N(...s){const e=t=>{const r=[];for(const n of s){const i=n.parser(t);if(i.isError)return i;i.value!==void 0&&r.push(i.value),t=i}return t.ok(r)};return new u(s.length===1?s[0].parser:e,o("all",void 0,...s))}function O(s){const e=t=>{if(t.offset>=t.src.length)return t.err(void 0);const r=t.src.slice(t.offset,t.offset+s.length);return r===s?t.ok(r,r.length):t.err(void 0)};return new u(e,o("string",void 0,s))}function v(s,e=t=>t==null?void 0:t[0]){const t=s.flags.replace(/y/g,""),r=new RegExp(s,t+"y"),n=i=>{if(i.offset>=i.src.length)return i.err(void 0);r.lastIndex=i.offset;const c=e(i.src.match(r));return c?i.ok(c,r.lastIndex-i.offset):c===""?i.ok(void 0):i.err(void 0)};return new u(n,o("regex",void 0,s))}const E=/\s*/y,k=s=>{var t;if(s.offset>=s.src.length)return s;E.lastIndex=s.offset;const e=((t=s.src.match(E))==null?void 0:t[0])??"";return s.ok(s.value,e.length)},S=v(/\s*/);S.context.name="whitespace";exports.Parser=u;exports.all=N;exports.any=R;exports.eof=z;exports.getLazyParser=x;exports.lazy=I;exports.regex=v;exports.string=O;exports.whitespace=S;
//# sourceMappingURL=parse.cjs.map
