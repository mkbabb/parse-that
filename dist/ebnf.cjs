"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("./parse.cjs");var $=Object.defineProperty,R=Object.getOwnPropertyDescriptor,y=(n,e,a,t)=>{for(var r=t>1?void 0:t?R(e,a):e,i=n.length-1,s;i>=0;i--)(s=n[i])&&(r=(t?s(e,a,r):s(r))||r);return t&&r&&$(e,a,r),r};class p{identifier(){return o.regex(/[_a-zA-Z][_a-zA-Z0-9]*/).trim()}literal(){return o.any(o.regex(/[^"]+/).wrap(o.string('"'),o.string('"')),o.regex(/[^']+/).wrap(o.string("'"),o.string("'"))).map(e=>({type:"literal",value:e}))}epsilon(){return o.any(o.string("epsilon"),o.string("Îµ")).trim().map(e=>({type:"epsilon",value:void 0}))}nonterminal(){return this.identifier().map(e=>({type:"nonterminal",value:e}))}group(){return this.expression().trim().wrap(o.string("("),o.string(")")).map(e=>({type:"group",value:e}))}regex(){return o.regex(/[^\/]*/).wrap(o.string("/"),o.string("/")).map(e=>({type:"regex",value:new RegExp(e)}))}optional(){return this.term().skip(o.string("?").trim()).map(e=>({type:"optional",value:e}))}optionalGroup(){return this.expression().trim().wrap(o.string("["),o.string("]")).map(e=>({type:"optional",value:e}))}optionalWhitespace(){return this.term().skip(o.string("?w").trim()).map(e=>({type:"optionalWhitespace",value:e}))}minus(){return o.all(this.term().skip(o.string("-").trim()),this.term()).map(([e,a])=>({type:"minus",value:[e,a]}))}manyGroup(){return this.expression().trim().wrap(o.string("{"),o.string("}")).map(e=>({type:"many",value:e}))}many(){return this.term().skip(o.string("*").trim()).map(e=>({type:"many",value:e}))}many1(){return this.term().skip(o.string("+").trim()).map(e=>({type:"many1",value:e}))}next(){return o.all(this.factor().skip(o.string(">>").trim()),o.any(this.skip(),this.factor())).map(([e,a])=>({type:"next",value:[e,a]}))}skip(){return o.all(o.any(this.next(),this.factor()).skip(o.string("<<").trim()),this.factor()).map(([e,a])=>({type:"skip",value:[e,a]}))}concatenation(){return o.any(this.skip(),this.next(),this.factor()).sepBy(o.string(",").trim(),1).map(e=>({type:"concatenation",value:e}))}alternation(){return o.any(this.concatenation(),this.skip(),this.next(),this.factor()).sepBy(o.string("|").trim(),1).map(e=>({type:"alternation",value:e}))}bigComment(){return o.regex(/\/\*[^]*?\*\//).trim()}comment(){return o.regex(/\/\/.*/).trim().or(this.bigComment())}term(){return o.any(this.epsilon(),this.literal(),this.nonterminal(),this.regex(),this.group(),this.optionalGroup(),this.manyGroup()).then(this.bigComment().opt()).map(([e,a])=>(e.comment=a,e))}factor(){return o.any(this.optionalWhitespace(),this.optional(),this.many(),this.many1(),this.minus(),this.term())}expression(){return o.any(this.alternation(),this.concatenation(),this.skip(),this.next(),this.factor())}productionRule(){return o.all(this.identifier().skip(o.string("=").trim()),this.expression().skip(o.any(o.string(";").trim(),o.string(".").trim()))).map(([e,a])=>({name:e,expression:a}))}grammar(){return o.all(this.comment().many(),this.productionRule(),this.comment().many()).map(([e,a,t])=>(a.comment={above:e,below:t},a)).many(1)}}y([o.lazy],p.prototype,"group",1);y([o.lazy],p.prototype,"regex",1);y([o.lazy],p.prototype,"optionalGroup",1);y([o.lazy],p.prototype,"manyGroup",1);y([o.lazy],p.prototype,"next",1);y([o.lazy],p.prototype,"skip",1);function h(n){const e=new Set,a=[];function t(i,s){if(s.has(i)||e.has(i))return;s.add(i);const l=n.get(i);if(!l)return;const u=l.expression;if(u.type==="nonterminal")t(u.value,s);else if(u.value instanceof Array)for(const m of u.value)m.type==="nonterminal"&&t(m.value,s);e.add(i),s.delete(i),a.unshift(n.get(i))}for(const[i]of n)t(i,new Set);const r=new Map;for(const i of a)r.set(i.name,i);return r}const v=(n,e)=>{if(!(!(n!=null&&n.type)||!(e!=null&&e.type)||n.type!==e.type))switch(n.type){case"literal":case"nonterminal":return n.value!==e.value?void 0:[n,{type:"epsilon"},{type:"epsilon"}];case"group":case"optional":case"many":case"many1":{const a=v(n.value,e.value);return a?[{type:n.type,value:a[0]},{type:n.type,value:a[1]},{type:n.type,value:a[2]}]:void 0}case"concatenation":{const a=n.value.map((u,m)=>v(n.value[m],e.value[m]));if(a.some(u=>u===void 0))return;const t=a.map(u=>u[0]),r=a.map(u=>u[1]),i=a.map(u=>u[2]),s=t.lastIndexOf(null);return s===t.length-1?void 0:[{type:"concatenation",value:t.slice(s+1)},{type:"concatenation",value:r},{type:"concatenation",value:i}]}case"alternation":for(const a of n.value){const t=v(a,e);if(t)return t}for(const a of e.value){const t=v(n,a);if(t)return t}return}},f=(n,e)=>{if(n.type!==e.type)return!1;switch(n.type){case"literal":case"nonterminal":return n.value===e.value;case"group":case"optional":case"many":case"many1":return f(n.value,e.value);case"minus":case"skip":case"next":return f(n.value[0],e.value[0])&&f(n.value[1],e.value[1]);case"concatenation":return n.value.every((a,t)=>f(a,e.value[t]));case"alternation":return n.value.some((a,t)=>f(a,e.value[t]));case"epsilon":return!0}};function d(n,e){const a=new Map;let t=null;for(let r=0;r<e.value.length-1;r++){const i=e.value[r],s=e.value[r+1],l=v(i,s);if(l){const[u,m,g]=l;t!==null&&f(u,t)?a.get(t).push(g):(a.set(u,[m,g]),t=u),r===e.value.length-2&&e.value.shift(),e.value.shift(),r-=1}}for(const[r,i]of a){const l={type:"concatenation",value:[{type:"group",value:{type:"alternation",value:i}},{type:"group",value:r}]};e.value.push(l)}}const S=(n,e,a)=>{const t=[],r=[],i={type:"nonterminal",value:a};for(let s=0;s<e.value.length;s++){const l=e.value[s];l.type==="concatenation"&&l.value[0].value===n?r.push({type:"concatenation",value:[...l.value.slice(1),i]}):t.push({type:"concatenation",value:[l,i]})}return r.length===0?[void 0,void 0]:(r.push({type:"epsilon"}),[{type:"alternation",value:t},{type:"alternation",value:r}])};function w(n){const e=new Map;let a=0;for(const[t,r]of n){const{expression:i}=r;if(i.type==="alternation"){const s=`${t}_${a++}`,[l,u]=S(t,i,s);l&&(e.set(s,{name:s,expression:u}),e.set(t,{name:t,expression:l,comment:r.comment}))}}if(e.size===0)return n;for(const[t,r]of e)n.set(t,r);for(const[t,r]of n){const{expression:i}=r;i.type==="alternation"&&d(t,i)}}function A(n){const e=(a,t)=>{t.type==="concatenation"&&t.value[0].type==="nonterminal"&&t.value[0].value===a&&(t.value.slice(1,t.value.length),t.value.shift())};for(const[a,t]of n)e(a,t)}function T(n){const e=h(n);return w(e),e}function F(n){const a=new p().grammar().trim().parse(n);if(!a)throw new Error("Failed to parse EBNF grammar");return a.reduce((t,r,i)=>(t.set(r.name,r),t),new Map)}function P(n){function e(t,r){var i,s;switch(r.type){case"literal":return o.string(r.value);case"nonterminal":const l=o.Parser.lazy(()=>a[r.value]);return l.context.name=r.value,l;case"epsilon":return o.eof().opt();case"group":return e(t,r.value);case"regex":return o.regex(r.value);case"optionalWhitespace":return e(t,r.value).trim();case"optional":return e(t,r.value).opt();case"many":return e(t,r.value).many();case"many1":return e(t,r.value).many(1);case"skip":return e(t,r.value[0]).skip(e(t,r.value[1]));case"next":return e(t,r.value[0]).next(e(t,r.value[1]));case"minus":return e(t,r.value[0]).not(e(t,r.value[1]));case"concatenation":{const u=r.value.map(m=>e(t,m));return((s=(i=u.at(-1))==null?void 0:i.context)==null?void 0:s.name)==="eof"&&u.pop(),o.all(...u)}case"alternation":return o.any(...r.value.map(u=>e(t,u)))}}const a={};for(const[t,r]of n.entries())a[t]=e(t,r.expression);return a}function E(n,e=!1){let a=F(n);return e&&(a=T(a)),[P(a),a]}function N(n,e){const a=n.split(e);if(a.length===1)return n;n=a.map((r,i)=>i===a.length-1?e+r:i===0?r:r.split(",").length>1?`
	${e} `+r:e+r).join("");const t=66;if(n.length>t){let r=t;for(let i=0;i<n.length;i+=r){const s=i===0?t:i+r,l=n.indexOf(e,s);if(l===-1)break;n=n.slice(0,l)+`
	${e}`+n.slice(l+1)}}return n}const B=["symbol","identifier","terminal","pipe","comma","plus","minus","star","div","question","eof","optional_whitespace","regex","rhs","rule","grammar"],b=n=>{const[e,a]=E(n);for(const t of B)e[t]=e[t].trim();return e.symbol=e.symbol,e.identifier=e.identifier.map(t=>t.flat().join("")),e.terminal=e.terminal.map(t=>t.flat().join("")),e.regex=e.regex.map(t=>t.flat().join("")),e.rhs=e.rhs.map(t=>{const i=(t instanceof Array?t.flat(1/0):t).join(" ");return N(i,"|")}),e.rule=e.rule.map(t=>t.flat().join(" ")),e.grammar.map(t=>{let r=0;for(let i=0;i<t.length;i++){const s=t[i];s.length>80?(t[i]=s+`
`,i>0&&r!==i-1&&(t[i-1]=t[i-1]+`
`),r=i):i-r>2&&(t[i]=s+`
`,r=i)}return t.join(`
`)})};function L(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function c(n){switch(n.type){case"literal":return L(n.value);case"nonterminal":return`($${n.value})`;case"epsilon":return"";case"group":return`(${c(n.value)})`;case"regex":return n.value.source;case"optional":return`(${c(n.value)})?`;case"minus":return`${c(n.value[0])}(?!${c(n.value[1])})`;case"many":return`(${c(n.value)})*`;case"many1":return`(${c(n.value)})+`;case"skip":return`${c(n.value[0])}(?:${c(n.value[1])})?`;case"next":return`${c(n.value[0])}(?=${c(n.value[1])})`;case"concatenation":return n.value.map(c).join("");case"alternation":return n.value.map(e=>`(${c(e)})`).join("|")}}function k(n){const e=[];for(const[a,t]of n)e.push({name:a,match:c(t)});return{name:"EEBNF",scopeName:"source.eebnf",fileTypes:["eebnf"],patterns:e}}exports.EBNFGrammar=p;exports.EBNFParser=b;exports.comparePrefix=f;exports.findCommonPrefix=v;exports.generateASTFromEBNF=F;exports.generateParserFromAST=P;exports.generateParserFromEBNF=E;exports.removeAllLeftRecursion=T;exports.removeDirectLeftRecursion=w;exports.removeIndirectLeftRecursion=A;exports.rewriteTreeLeftRecursion=d;exports.topologicalSort=h;exports.transformEBNFASTToTextMateLanguage=k;
//# sourceMappingURL=ebnf.cjs.map
