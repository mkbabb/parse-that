letter =  "A" | "B" | "C" | "D" | "E" | "F" | "G"
    | "H" | "I" | "J" | "K" | "L" | "M" | "N"
    | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
    | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
    | "c" | "d" | "e" | "f" | "g" | "h" | "i"
    | "j" | "k" | "l" | "m" | "n" | "o" | "p"
    | "q" | "r" | "s" | "t" | "u" | "v" | "w"
    | "x" | "y" | "z" ;

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

symbol = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"
        | "'" | '"' | "=" | "|" | "." | "," | ";" | "+" 
        | "-" | "*" | "/" | "?" | "%" | "&" | "^" | "~"
        | "`" | "!" | "@" | "#" | "$" | ":" | "\" | "ε" /*"*/
        | "\t" | "\r" | "?w" | "??" | "//" | " " ;

pipe = "|" ;
comma = "," ;
star = "*" ;
plus = "+" ;
question = "?" ;
minus = "-" ;
div = "/" ;
left_shift = "<<" ;
right_shift = ">>" ;

optional_whitespace = "?w" ;

character =  letter | digit | symbol | "_" ;
identifier = letter , { letter | digit | "_" | "-" } ;

literal =  "'" , ( character - "'" ) * , "'" 
         | '"' , ( character - '"' ) * , '"' ;


big_comment = "/*" , /[^\*]*$/ , "*/" ;
comment = "//" , /.*$/ ;

regex = div , (character - div) * , div ;

lhs = identifier ;

term = "ε"
     | identifier
     | literal 
     | regex
     | "(" , rhs , ")" 
     | "[" , rhs , "]"
     | "{" , rhs , "}" ;


factor = big_comment ? , (
      term , optional_whitespace
    | term , question
    | term , star
    | term , plus
    | term  
) , big_comment ? ;

binary_operators = left_shift | right_shift | minus ;

binary_factor = factor , ( binary_operators , factor ) * ;

concatenation = ( binary_factor , comma ? ) + ;
alternation = ( concatenation , pipe ? ) + ;

rhs = alternation ;

rule = lhs, "=", rhs, ";" ;

grammar =  rule * ;